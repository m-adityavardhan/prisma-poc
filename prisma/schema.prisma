// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(uuid())
  age         Int
  name        String
  email       String       @unique
  createdAt   DateTime     @default(now())
  isAdmin     Boolean
  posts       Post[]       @relation("AuthorPosts")
  favPosts    Post[]       @relation("FavoritedPosts")
  preferences Preferences?
  role        Role         @default(USER)

  @@unique([name, age]) // Composite unique constraint
  @@index([email]) // Index on email for faster lookups
}

model Preferences {
  id     String  @id @default(uuid())
  theme  String
  userId String? @unique
  user   User?   @relation(fields: [userId], references: [id])
}

model Post {
  id            String      @id @default(uuid())
  title         String
  rating        Float
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  userId        String
  author        User        @relation("AuthorPosts", fields: [userId], references: [id])
  favoritedBy   User        @relation("FavoritedPosts", fields: [favoritedById], references: [id])
  favoritedById String
  categories    catergory[]
}

model catergory {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}

enum Role {
  USER
  ADMIN
}
